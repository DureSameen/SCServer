<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=6d32ff45e0ccc69f"/>
  </configSections>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">

    <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />

    <!-- Start Unity Interceptor type aliases -->
    <alias alias="AuditLogging" type="SCServer.Core.Aspect.AuditLogging, SCServer.Core" />
    <!-- End Unity Interceptor type aliases -->

    <!-- Start NHibernate Session type alias for Session -->
    <alias alias="INHibernateContext" type="SCServer.Core.Infrastructure.INHibernateContext, SCServer.Core" />
    <alias alias="NHibernateContext" type="SCServer.Api.Infrastructure.NHibernateContext, SCServer.Api" />
    <!-- End NHibernate Session type alias for Session -->

    <!-- Start User-defined type aliases for UnitOfWork -->
    <alias alias="IUnitOfWork" type="SCServer.Core.IRepository.IUnitOfWork, SCServer.Core" />
    <alias alias="UnitOfWork" type="SCServer.Repository.UnitOfWork, SCServer.Repository" />
    <!-- End User-defined type aliases for UnitOfWork -->

    <!-- Start User-defined type aliases for Repositories -->
    <alias alias="IContentRepository" type="SCServer.Core.IRepository.IContentRepository, SCServer.Core" />
    <alias alias="ContentRepository" type="SCServer.Repository.ContentRepository, SCServer.Repository" />
    <!-- End User-defined type aliases for Repositories -->

    <!-- Start User-defined type aliases for Services -->
    <alias alias="IContentService" type="SCServer.Core.IService.IContentService, SCServer.Core" />
    <alias alias="ContentService" type="SCServer.Service.ContentService, SCServer.Service" />
    <!-- End User-defined type aliases for Services -->

    <container>
      <extension type="Interception" />

      <register type="INHibernateContext" mapTo="NHibernateContext" />

      <!--<register type="IContentRepository" mapTo="ContentRepository">
        <interceptor type="InterfaceInterceptor" />
        <interceptionBehavior type="AuditLogging" />
      </register>-->

      <register type="IUnitOfWork" mapTo="UnitOfWork" />

      <register type="ICustomerService" mapTo="CustomerService" />
    </container>
  </unity>
</configuration>
